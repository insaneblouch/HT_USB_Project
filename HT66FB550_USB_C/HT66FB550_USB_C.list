				;file C:\Users\james\Google 雲端硬碟\自製版子\holtek\GitHub\HT_USB_Project\HT66FB550_USB_C\main.c
				;1	#include "HT66FB550.h"
				;2	#include "HT66FB550_MCU.h"
				;3	#include "HT66FB550_IO.h"
				;4	#include "HT66FB550_typedef.h"
				;5	
				;6	void main()
				;7	{
				@code .SECTION 'CODE'
				include HT66FB550.inc
0000	2801	jmp     _main_startup1
				@start .SECTION 'CODE'
				_main_startup1:
				@start .SECTION 'CODE'
0001	2802	jmp     _main
				;8		HT66FB550_MCU_Init();
				_main:
				_main:
0002	2008	call    _HT66FB550_MCU_Init
				;9		HT66FB550_IO_INIT();
0003	20FA	call    _HT66FB550_IO_INIT
				;10		//_acer0 = 0;
				;11		//_acer1 = 0;
				;12		//_pbc = 0;
				;13		
				;14		loop:
				;15	
				;16		_pb1=1;
				_L2:
0004	30A2	set     PB1
				;17		_pb1=0;
0005	34A2	clr     PB1
0006	2804	jmp     _L2
0007	2807	jmp     $
				;18		goto loop;
				;19	}
				;file C:\Users\james\Google 雲端硬碟\自製版子\holtek\GitHub\HT_USB_Project\HT66FB550_USB_Common\HT66FB550_MCU.c
				;1	#include "HT66FB550.h"
				;2	#include "HT66FB550_typedef.h"
				;3	#include "Config.h"
				;4	
				;5	/*  HT66FB550 INIT
				;6	    step:
				;7	        1.setting PLL(configure by config.h)
				;8	        2.cancel WDT
				;9	    Notification: This function is also cancel USB-related config
				;10	*/
				;11	//#ifndef HT66FB550_MCU_Speed
				;12		//#define HT66FB550_MCU_Speed HT66FB550_16Mhz
				;13	//#endif
				;14	
				;15	#if HT66FB550_MCU_Speed == HT66FB550_6Mhz
				;16	void HT66FB550_MCU_Init(void)
				;17	{
				;18		//1.setting PLL source(6Mhz) -> PLL -> Fh=16Mhz -> Fsys=16Mhz (It seem like little error in here, try later)
				;19	    _ucc    = 0x60;         //sysclk=6MHz,Fsys16MHz=1
				;20	    _usc    = 0x20;         //pll=on
				;21	    _smod   = 0xE1;         //Fsys_clock_divider=none;direct come for Fh
				;22	    //2.cancel WDT
				;23	    _wdtc   = 0xAC;
				;24	}
				;25	#elif HT66FB550_MCU_Speed == HT66FB550_16Mhz
				;26	void HT66FB550_MCU_Init(void)
				;27	{
				;28	    //1.setting PLL source(6Mhz) -> PLL -> Fh=16Mhz -> Fsys=16Mhz (It seem like little error in here, try later)
				;29	    _ucc    = 0x60;         //sysclk=6MHz,Fsys16MHz=1
				_HT66FB550_MCU_Init:
				_HT66FB550_MCU_Init:
				@dummy .SECTION 'CODE'
0008	0F60	mov     a, 60H
0009	00E8	mov     UCC, a
				;30	    _usc    = 0x00;         //pll=on
000A	1F66	clr     USC
				;31	    _smod   = 0xE1;         //Fsys_clock_divider=none;direct come for Fh
000B	0FE1	mov     a, E1H
000C	008B	mov     SMOD, a
				;32	    //2.cancel WDT
				;33	    _wdtc   = 0xAC;
000D	0FAC	mov     a, ACH
000E	008E	mov     WDTC, a
000F	0003	ret
				;34	}
				;35	
				;36	#endif
				;file C:\Users\james\Google 雲端硬碟\自製版子\holtek\GitHub\HT_USB_Project\HT66FB550_USB_Common\HT66FB550_IO.c
				;1	#include "HT66FB550.h"
				;2	#include "HT66FB550_MCU.h"
				;3	#include "HT66FB550_IO.h"
				;4	#include "HT66FB550_typedef.h"
				;5	
				;6	//io direction buf
				;7	char port_A_config,port_B_config,port_C_config,port_D_config,port_E_config;
				;8	//io data buf
				;9	char port_A_data,port_B_data,port_C_data,port_D_data,port_E_data;
				;10	//io pull-high buf
				;11	char port_A_pull_high,port_B_pull_high,port_C_pull_high,port_D_pull_high,port_E_pull_high;
				;12	
				;13	void HT66FB550_IO_INIT(void)
				;14	{
				;15		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PA,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
				_HT66FB550_IO_INIT:
				_HT66FB550_IO_INIT:
00FA	5F13	clr     data
00FB	5F92	set     pin
00FC	0F00	mov     a, 0H
00FD	2010	call    _HT66FB550_IO_DIR
				;16		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PB,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
00FE	5F13	clr     data
00FF	5F92	set     pin
0100	0F01	mov     a, 1H
0101	2010	call    _HT66FB550_IO_DIR
				;17		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PC,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
0102	5F13	clr     data
0103	5F92	set     pin
0104	0F02	mov     a, 2H
0105	2010	call    _HT66FB550_IO_DIR
				;18		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PD,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
0106	5F13	clr     data
0107	5F92	set     pin
0108	0F03	mov     a, 3H
0109	2010	call    _HT66FB550_IO_DIR
				;19		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PE,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
010A	5F13	clr     data
010B	5F92	set     pin
010C	0F04	mov     a, 4H
010D	2010	call    _HT66FB550_IO_DIR
				;20		HT66FB550_IO_Data(HT66FB550_MCU_IO_PA,HT66FB550_MCU_IO_PINALL,0x00);
010E	5F13	clr     data
010F	5F92	set     pin
0110	0F00	mov     a, 0H
0111	2085	call    _HT66FB550_IO_Data
				;21		HT66FB550_IO_Data(HT66FB550_MCU_IO_PB,HT66FB550_MCU_IO_PINALL,0x00);
0112	5F13	clr     data
0113	5F92	set     pin
0114	0F01	mov     a, 1H
0115	2085	call    _HT66FB550_IO_Data
				;22		HT66FB550_IO_Data(HT66FB550_MCU_IO_PC,HT66FB550_MCU_IO_PINALL,0x00);
0116	5F13	clr     data
0117	5F92	set     pin
0118	0F02	mov     a, 2H
0119	2085	call    _HT66FB550_IO_Data
				;23		HT66FB550_IO_Data(HT66FB550_MCU_IO_PD,HT66FB550_MCU_IO_PINALL,0x00);
011A	5F13	clr     data
011B	5F92	set     pin
011C	0F03	mov     a, 3H
011D	2085	call    _HT66FB550_IO_Data
				;24		HT66FB550_IO_Data(HT66FB550_MCU_IO_PE,HT66FB550_MCU_IO_PINALL,0x00);
011E	5F13	clr     data
011F	5F92	set     pin
0120	0F04	mov     a, 4H
0121	2085	call    _HT66FB550_IO_Data
				;25	    //set ADC pin to IO pin here
				;26	    _acer0 = 0;
0122	1F33	clr     ACER0
				;27	    _acer1 = 0;
0123	1F34	clr     ACER1
0124	0003	ret
				;28	    
				;29	}
				;30	
				;31	void HT66FB550_IO_DIR(char port, char pin, char direction)
				;32	{
				_HT66FB550_IO_DIR:
				_HT66FB550_IO_DIR:
0010	408F	mov     ra, a
				;33		char filter=0x01;
				;34		filter = filter << pin;
0011	0F01	mov     a, 1H
0012	4090	mov     rb, a
0013	5F11	clr     rc
0014	5412	inca    pin[0]
0015	2819	jmp     L0019
				L0016:
0016	340A	clr     C
0017	5A90	rlc     rb
0018	5A91	rlc     rc
				L0019:
0019	1785	sdz     ACC
001A	2816	jmp     L0016
001B	4710	mov     a, rb
001C	4095	mov     filter[0], a
				;35		switch(port)
001D	470F	mov     a, ra
001E	0A00	sub     a, 0H
001F	3D0A	sz      Z
0020	2830	jmp     L0030
0021	0A01	sub     a, 1H
0022	3D0A	sz      Z
0023	2841	jmp     L0041
0024	470F	mov     a, ra
0025	0A02	sub     a, 2H
0026	3D0A	sz      Z
0027	2852	jmp     L0052
0028	0A01	sub     a, 1H
0029	3D0A	sz      Z
002A	2863	jmp     L0063
002B	470F	mov     a, ra
002C	0A04	sub     a, 4H
002D	390A	snz     Z
002E	2884	jmp     L0084
002F	2874	jmp     L0074
				;36		{
				;37			case HT66FB550_MCU_IO_PA:
				;38				switch(pin)
				;39				{
				;40					case HT66FB550_MCU_IO_PINALL:
				;41						port_A_config = direction;
				;42						break;
				;43					default:
				;44						port_A_config = port_A_config & (!filter);
				L0030:
0030	0F01	mov     a, 1H
0031	408F	mov     ra, a
0032	5095	sz      filter[0]
0033	2835	jmp     L0035
0034	2836	jmp     L0036
				L0035:
0035	5F0F	clr     ra
				L0036:
0036	470E	mov     a, port_A_config[0]
0037	468F	andm    a, ra
				;45						port_A_config = port_A_config | (filter & direction);
0038	4713	mov     a, direction[0]
0039	4690	andm    a, rb
003A	470F	mov     a, ra
003B	4590	orm     a, rb
003C	4710	mov     a, rb
003D	408E	mov     port_A_config[0], a
				;46						break;
				;47				}
				;48				_pac = port_A_config;
003E	4710	mov     a, rb
003F	009B	mov     PAC, a
				;49				break;
0040	2884	jmp     L0084
				;50			case HT66FB550_MCU_IO_PB:
				;51				switch(pin)
				;52				{
				;53					case HT66FB550_MCU_IO_PINALL:
				;54						port_B_config = direction;
				;55						break;
				;56					default:
				;57						port_B_config = port_B_config & (!filter);
				L0041:
0041	0F01	mov     a, 1H
0042	408F	mov     ra, a
0043	5095	sz      filter[0]
0044	2846	jmp     L0046
0045	2847	jmp     L0047
				L0046:
0046	5F0F	clr     ra
				L0047:
0047	470D	mov     a, port_B_config[0]
0048	468F	andm    a, ra
				;58						port_B_config = port_B_config | (filter & direction);
0049	4713	mov     a, direction[0]
004A	4690	andm    a, rb
004B	470F	mov     a, ra
004C	4590	orm     a, rb
004D	4710	mov     a, rb
004E	408D	mov     port_B_config[0], a
				;59						break;
				;60				}
				;61				_pbc = port_B_config;
004F	4710	mov     a, rb
0050	00A3	mov     PBC, a
				;62				break;
0051	2884	jmp     L0084
				;63			case HT66FB550_MCU_IO_PC:
				;64				switch(pin)
				;65				{
				;66					case HT66FB550_MCU_IO_PINALL:
				;67						port_C_config = direction;
				;68						break;
				;69					default:
				;70						port_C_config = port_C_config & (!filter);
				L0052:
0052	0F01	mov     a, 1H
0053	408F	mov     ra, a
0054	5095	sz      filter[0]
0055	2857	jmp     L0057
0056	2858	jmp     L0058
				L0057:
0057	5F0F	clr     ra
				L0058:
0058	470C	mov     a, port_C_config[0]
0059	468F	andm    a, ra
				;71						port_C_config = port_C_config | (filter & direction);
005A	4713	mov     a, direction[0]
005B	4690	andm    a, rb
005C	470F	mov     a, ra
005D	4590	orm     a, rb
005E	4710	mov     a, rb
005F	408C	mov     port_C_config[0], a
				;72						break;
				;73				}
				;74				_pcc = port_C_config;
0060	4710	mov     a, rb
0061	00A5	mov     PCC, a
				;75				break;
0062	2884	jmp     L0084
				;76			case HT66FB550_MCU_IO_PD:
				;77				switch(pin)
				;78				{
				;79					case HT66FB550_MCU_IO_PINALL:
				;80						port_D_config = direction;
				;81						break;
				;82					default:
				;83						port_D_config = port_D_config & (!filter);
				L0063:
0063	0F01	mov     a, 1H
0064	408F	mov     ra, a
0065	5095	sz      filter[0]
0066	2868	jmp     L0068
0067	2869	jmp     L0069
				L0068:
0068	5F0F	clr     ra
				L0069:
0069	470B	mov     a, port_D_config[0]
006A	468F	andm    a, ra
				;84						port_D_config = port_D_config | (filter & direction);
006B	4713	mov     a, direction[0]
006C	4690	andm    a, rb
006D	470F	mov     a, ra
006E	4590	orm     a, rb
006F	4710	mov     a, rb
0070	408B	mov     port_D_config[0], a
				;85						break;
				;86				}
				;87				_pdc = port_D_config;
0071	4710	mov     a, rb
0072	00A7	mov     PDC, a
				;88				break;
0073	2884	jmp     L0084
				;89			case HT66FB550_MCU_IO_PE:
				;90				switch(pin)
				;91				{
				;92					case HT66FB550_MCU_IO_PINALL:
				;93						port_E_config = direction;
				;94						break;
				;95					default:
				;96						port_E_config = port_E_config & (!filter);
				L0074:
0074	0F01	mov     a, 1H
0075	408F	mov     ra, a
0076	5095	sz      filter[0]
0077	2879	jmp     L0079
0078	287A	jmp     L007A
				L0079:
0079	5F0F	clr     ra
				L007A:
007A	470A	mov     a, port_E_config[0]
007B	468F	andm    a, ra
				;97						port_E_config = port_E_config | (filter & direction);
007C	4713	mov     a, direction[0]
007D	4690	andm    a, rb
007E	470F	mov     a, ra
007F	4590	orm     a, rb
0080	4710	mov     a, rb
0081	408A	mov     port_E_config[0], a
				;98						break;
				;99				}
				;100				_pec = port_E_config;
0082	4710	mov     a, rb
0083	00A9	mov     PEC, a
				L0084:
0084	0003	ret
				;101				break;
				;102		}	
				;103	}
				;104	
				;105	void HT66FB550_IO_Data(char port, char pin, char data)
				;106	{
				_HT66FB550_IO_Data:
				_HT66FB550_IO_Data:
0085	408F	mov     ra, a
				;107		char filter=0x01;
				;108		filter = filter << pin;
0086	0F01	mov     a, 1H
0087	4090	mov     rb, a
0088	5F11	clr     rc
0089	5412	inca    pin[0]
008A	288E	jmp     L008E
				L008B:
008B	340A	clr     C
008C	5A90	rlc     rb
008D	5A91	rlc     rc
				L008E:
008E	1785	sdz     ACC
008F	288B	jmp     L008B
0090	4710	mov     a, rb
0091	4095	mov     filter[0], a
				;109		switch(port)
0092	470F	mov     a, ra
0093	0A00	sub     a, 0H
0094	3D0A	sz      Z
0095	28A5	jmp     L00A5
0096	0A01	sub     a, 1H
0097	3D0A	sz      Z
0098	28B6	jmp     L00B6
0099	470F	mov     a, ra
009A	0A02	sub     a, 2H
009B	3D0A	sz      Z
009C	28C7	jmp     L00C7
009D	0A01	sub     a, 1H
009E	3D0A	sz      Z
009F	28D8	jmp     L00D8
00A0	470F	mov     a, ra
00A1	0A04	sub     a, 4H
00A2	390A	snz     Z
00A3	28F9	jmp     L00F9
00A4	28E9	jmp     L00E9
				;110		{
				;111			case HT66FB550_MCU_IO_PA:
				;112				switch(pin)
				;113				{
				;114					case HT66FB550_MCU_IO_PINALL:
				;115						port_A_data = data;
				;116						break;
				;117					default:
				;118						port_A_data = port_A_data & (!filter);
				L00A5:
00A5	0F01	mov     a, 1H
00A6	408F	mov     ra, a
00A7	5095	sz      filter[0]
00A8	28AA	jmp     L00AA
00A9	28AB	jmp     L00AB
				L00AA:
00AA	5F0F	clr     ra
				L00AB:
00AB	4709	mov     a, port_A_data[0]
00AC	468F	andm    a, ra
				;119						port_A_data = port_A_data | (filter & data);
00AD	4713	mov     a, data[0]
00AE	4690	andm    a, rb
00AF	470F	mov     a, ra
00B0	4590	orm     a, rb
00B1	4710	mov     a, rb
00B2	4089	mov     port_A_data[0], a
				;120						break;
				;121				}
				;122				_pa = port_A_data;
00B3	4710	mov     a, rb
00B4	009A	mov     PA, a
				;123				break;
00B5	28F9	jmp     L00F9
				;124			case HT66FB550_MCU_IO_PB:
				;125				switch(pin)
				;126				{
				;127					case HT66FB550_MCU_IO_PINALL:
				;128						port_B_data = data;
				;129						break;
				;130					default:
				;131						port_B_data = port_B_data & (!filter);
				L00B6:
00B6	0F01	mov     a, 1H
00B7	408F	mov     ra, a
00B8	5095	sz      filter[0]
00B9	28BB	jmp     L00BB
00BA	28BC	jmp     L00BC
				L00BB:
00BB	5F0F	clr     ra
				L00BC:
00BC	4708	mov     a, port_B_data[0]
00BD	468F	andm    a, ra
				;132						port_B_data = port_B_data | (filter & data);
00BE	4713	mov     a, data[0]
00BF	4690	andm    a, rb
00C0	470F	mov     a, ra
00C1	4590	orm     a, rb
00C2	4710	mov     a, rb
00C3	4088	mov     port_B_data[0], a
				;133						break;
				;134				}
				;135				_pb = port_B_data;
00C4	4710	mov     a, rb
00C5	00A2	mov     PB, a
				;136				break;
00C6	28F9	jmp     L00F9
				;137			case HT66FB550_MCU_IO_PC:
				;138				switch(pin)
				;139				{
				;140					case HT66FB550_MCU_IO_PINALL:
				;141						port_C_data = data;
				;142						break;
				;143					default:
				;144						port_C_data = port_C_data & (!filter);
				L00C7:
00C7	0F01	mov     a, 1H
00C8	408F	mov     ra, a
00C9	5095	sz      filter[0]
00CA	28CC	jmp     L00CC
00CB	28CD	jmp     L00CD
				L00CC:
00CC	5F0F	clr     ra
				L00CD:
00CD	4707	mov     a, port_C_data[0]
00CE	468F	andm    a, ra
				;145						port_C_data = port_C_data | (filter & data);
00CF	4713	mov     a, data[0]
00D0	4690	andm    a, rb
00D1	470F	mov     a, ra
00D2	4590	orm     a, rb
00D3	4710	mov     a, rb
00D4	4087	mov     port_C_data[0], a
				;146						break;
				;147				}
				;148				_pc = port_C_data;
00D5	4710	mov     a, rb
00D6	00A4	mov     PC, a
				;149				break;
00D7	28F9	jmp     L00F9
				;150			case HT66FB550_MCU_IO_PD:
				;151				switch(pin)
				;152				{
				;153					case HT66FB550_MCU_IO_PINALL:
				;154						port_D_data = data;
				;155						break;
				;156					default:
				;157						port_D_data = port_D_data & (!filter);
				L00D8:
00D8	0F01	mov     a, 1H
00D9	408F	mov     ra, a
00DA	5095	sz      filter[0]
00DB	28DD	jmp     L00DD
00DC	28DE	jmp     L00DE
				L00DD:
00DD	5F0F	clr     ra
				L00DE:
00DE	4706	mov     a, port_D_data[0]
00DF	468F	andm    a, ra
				;158						port_D_data = port_D_data | (filter & data);
00E0	4713	mov     a, data[0]
00E1	4690	andm    a, rb
00E2	470F	mov     a, ra
00E3	4590	orm     a, rb
00E4	4710	mov     a, rb
00E5	4086	mov     port_D_data[0], a
				;159						break;
				;160				}
				;161				_pd = port_D_data;
00E6	4710	mov     a, rb
00E7	00A6	mov     PD, a
				;162				break;
00E8	28F9	jmp     L00F9
				;163			case HT66FB550_MCU_IO_PE:
				;164				switch(pin)
				;165				{
				;166					case HT66FB550_MCU_IO_PINALL:
				;167						port_E_data = data;
				;168						break;
				;169					default:
				;170						port_E_data = port_E_data & (!filter);
				L00E9:
00E9	0F01	mov     a, 1H
00EA	408F	mov     ra, a
00EB	5095	sz      filter[0]
00EC	28EE	jmp     L00EE
00ED	28EF	jmp     L00EF
				L00EE:
00EE	5F0F	clr     ra
				L00EF:
00EF	4705	mov     a, port_E_data[0]
00F0	468F	andm    a, ra
				;171						port_E_data = port_E_data | (filter & data);
00F1	4713	mov     a, data[0]
00F2	4690	andm    a, rb
00F3	470F	mov     a, ra
00F4	4590	orm     a, rb
00F5	4710	mov     a, rb
00F6	4085	mov     port_E_data[0], a
				;172						break;
				;173				}
				;174				_pe = port_E_data;
00F7	4710	mov     a, rb
00F8	00A8	mov     PE, a
				L00F9:
00F9	0003	ret
				;175				break;
				;176		}		
				;177	}
				;178	
				;179	void HT66FB550_IO_Pull_High(char port, char pin, char data)
				;180	{
				;181		char filter=0x01;
				;182		filter = filter << pin;
				;183		switch(port)
				;184		{
				;185			case HT66FB550_MCU_IO_PA:
				;186				switch(pin==HT66FB550_MCU_IO_PINALL)
				;187				{
				;188					case HT66FB550_MCU_IO_PINALL:
				;189						port_A_pull_high = data;
				;190						break;
				;191					default:
				;192						port_A_pull_high = port_A_pull_high & (!filter);
				;193						port_A_pull_high = port_A_pull_high | (filter & data);
				;194						break;
				;195				}
				;196				_pa = port_A_pull_high;
				;197				break;
				;198			case HT66FB550_MCU_IO_PB:
				;199				switch(pin==HT66FB550_MCU_IO_PINALL)
				;200				{
				;201					case HT66FB550_MCU_IO_PINALL:
				;202						port_B_pull_high = data;
				;203						break;
				;204					default:
				;205						port_B_pull_high = port_B_pull_high & (!filter);
				;206						port_B_pull_high = port_B_pull_high | (filter & data);
				;207						break;
				;208				}
				;209				_pb = port_B_pull_high;
				;210				break;
				;211			case HT66FB550_MCU_IO_PC:
				;212				switch(pin==HT66FB550_MCU_IO_PINALL)
				;213				{
				;214					case HT66FB550_MCU_IO_PINALL:
				;215						port_C_pull_high = data;
				;216						break;
				;217					default:
				;218						port_C_pull_high = port_C_pull_high & (!filter);
				;219						port_C_pull_high = port_C_pull_high | (filter & data);
				;220						break;
				;221				}
				;222				_pc = port_C_pull_high;
				;223				break;
				;224			case HT66FB550_MCU_IO_PD:
				;225				switch(pin==HT66FB550_MCU_IO_PINALL)
				;226				{
				;227					case HT66FB550_MCU_IO_PINALL:
				;228						port_D_pull_high = data;
				;229						break;
				;230					default:
				;231						port_D_pull_high = port_D_pull_high & (!filter);
				;232						port_D_pull_high = port_D_pull_high | (filter & data);
				;233						break;
				;234				}
				;235				_pd = port_D_pull_high;
				;236				break;
				;237			case HT66FB550_MCU_IO_PE:
				;238				switch(pin==HT66FB550_MCU_IO_PINALL)
				;239				{
				;240					case HT66FB550_MCU_IO_PINALL:
				;241						port_E_pull_high = data;
				;242						break;
				;243					default:
				;244						port_E_pull_high = port_E_pull_high & (!filter);
				;245						port_E_pull_high = port_E_pull_high | (filter & data);
				;246						break;
				;247				}
				;248				_pe = port_E_pull_high;
				;249				break;
				;250		}			
				;251	}
				;252	
				;253	void HT66FB550_IO_High_Current(char port, char data)
				;254	{
				;255		switch(port)
				;256		{
				;257			case HT66FB550_MCU_IO_PA:
				;258				switch(data)
				;259				{
				;260					case HT66FB550_MCU_IO_DATA_SET:
				;261						_paoi = 0xff;
				;262						break;
				;263					case HT66FB550_MCU_IO_DATA_CLEAR:
				;264					default:
				;265						_paoi = 0x00;
				;266						break;
				;267				}
				;268				break;
				;269			case HT66FB550_MCU_IO_PB:
				;270				switch(data)
				;271				{
				;272					case HT66FB550_MCU_IO_DATA_SET:
				;273						_pbhi = 1;
				;274						_pbli = 1;
				;275						break;
				;276					case HT66FB550_MCU_IO_DATA_CLEAR:
				;277					default:
				;278						_pbhi = 0;
				;279						_pbli = 0;
				;280						break;
				;281				}
				;282			case HT66FB550_MCU_IO_PC:
				;283				switch(data)
				;284				{
				;285					case HT66FB550_MCU_IO_DATA_SET:
				;286						_pchi = 1;
				;287						_pcli = 1;
				;288						break;
				;289					case HT66FB550_MCU_IO_DATA_CLEAR:
				;290					default:
				;291						_pchi = 0;
				;292						_pcli = 0;
				;293						break;
				;294				}
				;295			case HT66FB550_MCU_IO_PD:
				;296				switch(data)
				;297				{
				;298					case HT66FB550_MCU_IO_DATA_SET:
				;299						_pdhi = 1;
				;300						_pdli = 1;
				;301						break;
				;302					case HT66FB550_MCU_IO_DATA_CLEAR:
				;303					default:
				;304						_pdhi = 0;
				;305						_pdli = 0;
				;306						break;
				;307				}
				;308			case HT66FB550_MCU_IO_PE:
				;309				switch(data)
				;310				{
				;311					case HT66FB550_MCU_IO_DATA_SET:
				;312						_pehi = 1;
				;313						_peli = 1;
				;314						break;
				;315					case HT66FB550_MCU_IO_DATA_CLEAR:
				;316					default:
				;317						_pehi = 0;
				;318						_peli = 0;
				;319						break;
				;320				}
				;321		}			
				;322	}
				;323	
				;324	void HT66FB550_IO_Slew_Rate(void)
				;325	{
				;326	    
				;327	}
				;328	void HT66FB550_IO_Port_A_Output_Power_Control(char pin, char power_source)
				;329	{
				;330		
				;331	}
				data .SECTION 'DATA'
				__smod DB DUP (?) ; __smod
				__wdtc DB DUP (?) ; __wdtc
				__pa DB DUP (?) ; __pa
				__pac DB DUP (?) ; __pac
				__paoi DB DUP (?) ; __paoi
				__pxoi DB DUP (?) ; __pxoi
				__pb DB DUP (?) ; __pb
				__pbc DB DUP (?) ; __pbc
				__pc DB DUP (?) ; __pc
				__pcc DB DUP (?) ; __pcc
				__pd DB DUP (?) ; __pd
				__pdc DB DUP (?) ; __pdc
				__pe DB DUP (?) ; __pe
				__pec DB DUP (?) ; __pec
				__acer0 DB DUP (?) ; __acer0
				__acer1 DB DUP (?) ; __acer1
				__usc DB DUP (?) ; __usc
				__ucc DB DUP (?) ; __ucc
				port_E_pull_high DB DUP (?) ; port_E_pull_high
				port_D_pull_high DB DUP (?) ; port_D_pull_high
				port_C_pull_high DB DUP (?) ; port_C_pull_high
				port_B_pull_high DB DUP (?) ; port_B_pull_high
				port_A_pull_high DB DUP (?) ; port_A_pull_high
				port_E_data DB DUP (?) ; port_E_data
				port_D_data DB DUP (?) ; port_D_data
				port_C_data DB DUP (?) ; port_C_data
				port_B_data DB DUP (?) ; port_B_data
				port_A_data DB DUP (?) ; port_A_data
				port_E_config DB DUP (?) ; port_E_config
				port_D_config DB DUP (?) ; port_D_config
				port_C_config DB DUP (?) ; port_C_config
				port_B_config DB DUP (?) ; port_B_config
				port_A_config DB DUP (?) ; port_A_config
				ra DB DUP (?)
				rb DB DUP (?)
				rc DB DUP (?)
				pin DB DUP (?) ; pin
				data DB DUP (?) ; data
				port DB DUP (?) ; port
				filter DB DUP (?) ; filter
