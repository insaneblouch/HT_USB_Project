				;file C:\Users\james\Google 雲端硬碟\自製版子\holtek\GitHub\HT_USB_Project\HT66FB550_USB_C\main.c
				;1	#include "HT66FB550.h"
				;2	#include "HT66FB550_MCU.h"
				;3	#include "HT66FB550_IO.h"
				;4	#include "HT66FB550_typedef.h"
				;5	
				;6	void main()
				;7	{
				@code .SECTION 'CODE'
				include HT66FB550.inc
0000	2801	jmp     _main_startup1
				@start .SECTION 'CODE'
				_main_startup1:
				@start .SECTION 'CODE'
0001	2802	jmp     _main
				;8		HT66FB550_MCU_Init();
				_main:
				_main:
0002	2008	call    _HT66FB550_MCU_Init
				;9		HT66FB550_IO_INIT();
0003	20F3	call    _HT66FB550_IO_INIT
				;10		//_acer0 = 0;
				;11		//_acer1 = 0;
				;12		//_pbc = 0;
				;13		loop:
				;14	
				;15		_pb1=1;
				_L2:
0004	30A2	set     PB1
				;16		_pb1=0;
0005	34A2	clr     PB1
0006	2804	jmp     _L2
0007	2807	jmp     $
				;17		goto loop;
				;18	}
				;file C:\Users\james\Google 雲端硬碟\自製版子\holtek\GitHub\HT_USB_Project\HT66FB550_USB_Common\HT66FB550_MCU.c
				;1	#include "HT66FB550.h"
				;2	
				;3	/*  HT66FB550 INIT
				;4	    step:
				;5	        1.cancel WDT
				;6	        2.setting PLL(configure by config.h)
				;7	    Notification: This function is also cancel USB-related config
				;8	*/
				;9	
				;10	#if (HT66FB550_6Mhz==HT66FB550_MCU_Speed)
				;11	void HT66FB550_MCU_Init(void)
				;12	{
				_HT66FB550_MCU_Init:
				_HT66FB550_MCU_Init:
				@dummy .SECTION 'CODE'
0008	0003	ret
				;13		
				;14	}
				;15	#elif (HT66FB550_16Mhz==HT66FB550_MCU_Speed)
				;16	void HT66FB550_MCU_Init(void)
				;17	{
				;18		//1.cancel WDT
				;19	    _wdtc   = 0xAC;
				;20	    //2.setting PLL source(6Mhz) -> PLL -> Fh=16Mhz -> Fsys=16Mhz (It seem like little error in here, try later)
				;21	    _ucc    = 0x60;         //sysclk=6MHz,Fsys16MHz=1
				;22	    _usc    = 0x20;         //pll=on
				;23	    _smod   = 0xE1;         //Fsys_clock_divider=none;direct come for Fh
				;24	}
				;25	
				;26	#endif
				;file C:\Users\james\Google 雲端硬碟\自製版子\holtek\GitHub\HT_USB_Project\HT66FB550_USB_Common\HT66FB550_IO.c
				;1	#include "HT66FB550.h"
				;2	#include "HT66FB550_MCU.h"
				;3	#include "HT66FB550_IO.h"
				;4	#include "HT66FB550_typedef.h"
				;5	
				;6	//io direction buf
				;7	char port_A_config,port_B_config,port_C_config,port_D_config,port_E_config;
				;8	//io data buf
				;9	char port_A_data,port_B_data,port_C_data,port_D_data,port_E_data;
				;10	//io pull-high buf
				;11	char port_A_pull_high,port_B_pull_high,port_C_pull_high,port_D_pull_high,port_E_pull_high;
				;12	
				;13	void HT66FB550_IO_INIT(void)
				;14	{
				;15		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PA,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
				_HT66FB550_IO_INIT:
				_HT66FB550_IO_INIT:
00F3	5F13	clr     data
00F4	5F92	set     pin
00F5	0F00	mov     a, 0H
00F6	2009	call    _HT66FB550_IO_DIR
				;16		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PB,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
00F7	5F13	clr     data
00F8	5F92	set     pin
00F9	0F01	mov     a, 1H
00FA	2009	call    _HT66FB550_IO_DIR
				;17		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PC,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
00FB	5F13	clr     data
00FC	5F92	set     pin
00FD	0F02	mov     a, 2H
00FE	2009	call    _HT66FB550_IO_DIR
				;18		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PD,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
00FF	5F13	clr     data
0100	5F92	set     pin
0101	0F03	mov     a, 3H
0102	2009	call    _HT66FB550_IO_DIR
				;19		HT66FB550_IO_DIR(HT66FB550_MCU_IO_PE,HT66FB550_MCU_IO_PINALL,HT66FB550_MCU_IO_OUTPUT);
0103	5F13	clr     data
0104	5F92	set     pin
0105	0F04	mov     a, 4H
0106	2009	call    _HT66FB550_IO_DIR
				;20		HT66FB550_IO_Data(HT66FB550_MCU_IO_PA,HT66FB550_MCU_IO_PINALL,0x00);
0107	5F13	clr     data
0108	5F92	set     pin
0109	0F00	mov     a, 0H
010A	207E	call    _HT66FB550_IO_Data
				;21		HT66FB550_IO_Data(HT66FB550_MCU_IO_PB,HT66FB550_MCU_IO_PINALL,0x00);
010B	5F13	clr     data
010C	5F92	set     pin
010D	0F01	mov     a, 1H
010E	207E	call    _HT66FB550_IO_Data
				;22		HT66FB550_IO_Data(HT66FB550_MCU_IO_PC,HT66FB550_MCU_IO_PINALL,0x00);
010F	5F13	clr     data
0110	5F92	set     pin
0111	0F02	mov     a, 2H
0112	207E	call    _HT66FB550_IO_Data
				;23		HT66FB550_IO_Data(HT66FB550_MCU_IO_PD,HT66FB550_MCU_IO_PINALL,0x00);
0113	5F13	clr     data
0114	5F92	set     pin
0115	0F03	mov     a, 3H
0116	207E	call    _HT66FB550_IO_Data
				;24		HT66FB550_IO_Data(HT66FB550_MCU_IO_PE,HT66FB550_MCU_IO_PINALL,0x00);
0117	5F13	clr     data
0118	5F92	set     pin
0119	0F04	mov     a, 4H
011A	207E	call    _HT66FB550_IO_Data
				;25	    //set ADC pin to IO pin here
				;26	    _acer0 = 0;
011B	1F33	clr     ACER0
				;27	    _acer1 = 0;
011C	1F34	clr     ACER1
011D	0003	ret
				;28	    
				;29	}
				;30	
				;31	void HT66FB550_IO_DIR(char port, char pin, char direction)
				;32	{
				_HT66FB550_IO_DIR:
				_HT66FB550_IO_DIR:
0009	408F	mov     ra, a
				;33		char filter=0x01;
				;34		filter = filter << pin;
000A	0F01	mov     a, 1H
000B	4090	mov     rb, a
000C	5F11	clr     rc
000D	5412	inca    pin[0]
000E	2812	jmp     L0012
				L000F:
000F	340A	clr     C
0010	5A90	rlc     rb
0011	5A91	rlc     rc
				L0012:
0012	1785	sdz     ACC
0013	280F	jmp     L000F
0014	4710	mov     a, rb
0015	4095	mov     filter[0], a
				;35		switch(port)
0016	470F	mov     a, ra
0017	0A00	sub     a, 0H
0018	3D0A	sz      Z
0019	2829	jmp     L0029
001A	0A01	sub     a, 1H
001B	3D0A	sz      Z
001C	283A	jmp     L003A
001D	470F	mov     a, ra
001E	0A02	sub     a, 2H
001F	3D0A	sz      Z
0020	284B	jmp     L004B
0021	0A01	sub     a, 1H
0022	3D0A	sz      Z
0023	285C	jmp     L005C
0024	470F	mov     a, ra
0025	0A04	sub     a, 4H
0026	390A	snz     Z
0027	287D	jmp     L007D
0028	286D	jmp     L006D
				;36		{
				;37			case HT66FB550_MCU_IO_PA:
				;38				switch(pin)
				;39				{
				;40					case HT66FB550_MCU_IO_PINALL:
				;41						port_A_config = direction;
				;42						break;
				;43					default:
				;44						port_A_config = port_A_config & (!filter);
				L0029:
0029	0F01	mov     a, 1H
002A	408F	mov     ra, a
002B	5095	sz      filter[0]
002C	282E	jmp     L002E
002D	282F	jmp     L002F
				L002E:
002E	5F0F	clr     ra
				L002F:
002F	470E	mov     a, port_A_config[0]
0030	468F	andm    a, ra
				;45						port_A_config = port_A_config | (filter & direction);
0031	4713	mov     a, direction[0]
0032	4690	andm    a, rb
0033	470F	mov     a, ra
0034	4590	orm     a, rb
0035	4710	mov     a, rb
0036	408E	mov     port_A_config[0], a
				;46						break;
				;47				}
				;48				_pac = port_A_config;
0037	4710	mov     a, rb
0038	009B	mov     PAC, a
				;49				break;
0039	287D	jmp     L007D
				;50			case HT66FB550_MCU_IO_PB:
				;51				switch(pin)
				;52				{
				;53					case HT66FB550_MCU_IO_PINALL:
				;54						port_B_config = direction;
				;55						break;
				;56					default:
				;57						port_B_config = port_B_config & (!filter);
				L003A:
003A	0F01	mov     a, 1H
003B	408F	mov     ra, a
003C	5095	sz      filter[0]
003D	283F	jmp     L003F
003E	2840	jmp     L0040
				L003F:
003F	5F0F	clr     ra
				L0040:
0040	470D	mov     a, port_B_config[0]
0041	468F	andm    a, ra
				;58						port_B_config = port_B_config | (filter & direction);
0042	4713	mov     a, direction[0]
0043	4690	andm    a, rb
0044	470F	mov     a, ra
0045	4590	orm     a, rb
0046	4710	mov     a, rb
0047	408D	mov     port_B_config[0], a
				;59						break;
				;60				}
				;61				_pbc = port_B_config;
0048	4710	mov     a, rb
0049	00A3	mov     PBC, a
				;62				break;
004A	287D	jmp     L007D
				;63			case HT66FB550_MCU_IO_PC:
				;64				switch(pin)
				;65				{
				;66					case HT66FB550_MCU_IO_PINALL:
				;67						port_C_config = direction;
				;68						break;
				;69					default:
				;70						port_C_config = port_C_config & (!filter);
				L004B:
004B	0F01	mov     a, 1H
004C	408F	mov     ra, a
004D	5095	sz      filter[0]
004E	2850	jmp     L0050
004F	2851	jmp     L0051
				L0050:
0050	5F0F	clr     ra
				L0051:
0051	470C	mov     a, port_C_config[0]
0052	468F	andm    a, ra
				;71						port_C_config = port_C_config | (filter & direction);
0053	4713	mov     a, direction[0]
0054	4690	andm    a, rb
0055	470F	mov     a, ra
0056	4590	orm     a, rb
0057	4710	mov     a, rb
0058	408C	mov     port_C_config[0], a
				;72						break;
				;73				}
				;74				_pcc = port_C_config;
0059	4710	mov     a, rb
005A	00A5	mov     PCC, a
				;75				break;
005B	287D	jmp     L007D
				;76			case HT66FB550_MCU_IO_PD:
				;77				switch(pin)
				;78				{
				;79					case HT66FB550_MCU_IO_PINALL:
				;80						port_D_config = direction;
				;81						break;
				;82					default:
				;83						port_D_config = port_D_config & (!filter);
				L005C:
005C	0F01	mov     a, 1H
005D	408F	mov     ra, a
005E	5095	sz      filter[0]
005F	2861	jmp     L0061
0060	2862	jmp     L0062
				L0061:
0061	5F0F	clr     ra
				L0062:
0062	470B	mov     a, port_D_config[0]
0063	468F	andm    a, ra
				;84						port_D_config = port_D_config | (filter & direction);
0064	4713	mov     a, direction[0]
0065	4690	andm    a, rb
0066	470F	mov     a, ra
0067	4590	orm     a, rb
0068	4710	mov     a, rb
0069	408B	mov     port_D_config[0], a
				;85						break;
				;86				}
				;87				_pdc = port_D_config;
006A	4710	mov     a, rb
006B	00A7	mov     PDC, a
				;88				break;
006C	287D	jmp     L007D
				;89			case HT66FB550_MCU_IO_PE:
				;90				switch(pin)
				;91				{
				;92					case HT66FB550_MCU_IO_PINALL:
				;93						port_E_config = direction;
				;94						break;
				;95					default:
				;96						port_E_config = port_E_config & (!filter);
				L006D:
006D	0F01	mov     a, 1H
006E	408F	mov     ra, a
006F	5095	sz      filter[0]
0070	2872	jmp     L0072
0071	2873	jmp     L0073
				L0072:
0072	5F0F	clr     ra
				L0073:
0073	470A	mov     a, port_E_config[0]
0074	468F	andm    a, ra
				;97						port_E_config = port_E_config | (filter & direction);
0075	4713	mov     a, direction[0]
0076	4690	andm    a, rb
0077	470F	mov     a, ra
0078	4590	orm     a, rb
0079	4710	mov     a, rb
007A	408A	mov     port_E_config[0], a
				;98						break;
				;99				}
				;100				_pec = port_E_config;
007B	4710	mov     a, rb
007C	00A9	mov     PEC, a
				L007D:
007D	0003	ret
				;101				break;
				;102		}	
				;103	}
				;104	
				;105	void HT66FB550_IO_Data(char port, char pin, char data)
				;106	{
				_HT66FB550_IO_Data:
				_HT66FB550_IO_Data:
007E	408F	mov     ra, a
				;107		char filter=0x01;
				;108		filter = filter << pin;
007F	0F01	mov     a, 1H
0080	4090	mov     rb, a
0081	5F11	clr     rc
0082	5412	inca    pin[0]
0083	2887	jmp     L0087
				L0084:
0084	340A	clr     C
0085	5A90	rlc     rb
0086	5A91	rlc     rc
				L0087:
0087	1785	sdz     ACC
0088	2884	jmp     L0084
0089	4710	mov     a, rb
008A	4095	mov     filter[0], a
				;109		switch(port)
008B	470F	mov     a, ra
008C	0A00	sub     a, 0H
008D	3D0A	sz      Z
008E	289E	jmp     L009E
008F	0A01	sub     a, 1H
0090	3D0A	sz      Z
0091	28AF	jmp     L00AF
0092	470F	mov     a, ra
0093	0A02	sub     a, 2H
0094	3D0A	sz      Z
0095	28C0	jmp     L00C0
0096	0A01	sub     a, 1H
0097	3D0A	sz      Z
0098	28D1	jmp     L00D1
0099	470F	mov     a, ra
009A	0A04	sub     a, 4H
009B	390A	snz     Z
009C	28F2	jmp     L00F2
009D	28E2	jmp     L00E2
				;110		{
				;111			case HT66FB550_MCU_IO_PA:
				;112				switch(pin)
				;113				{
				;114					case HT66FB550_MCU_IO_PINALL:
				;115						port_A_data = data;
				;116						break;
				;117					default:
				;118						port_A_data = port_A_data & (!filter);
				L009E:
009E	0F01	mov     a, 1H
009F	408F	mov     ra, a
00A0	5095	sz      filter[0]
00A1	28A3	jmp     L00A3
00A2	28A4	jmp     L00A4
				L00A3:
00A3	5F0F	clr     ra
				L00A4:
00A4	4709	mov     a, port_A_data[0]
00A5	468F	andm    a, ra
				;119						port_A_data = port_A_data | (filter & data);
00A6	4713	mov     a, data[0]
00A7	4690	andm    a, rb
00A8	470F	mov     a, ra
00A9	4590	orm     a, rb
00AA	4710	mov     a, rb
00AB	4089	mov     port_A_data[0], a
				;120						break;
				;121				}
				;122				_pa = port_A_data;
00AC	4710	mov     a, rb
00AD	009A	mov     PA, a
				;123				break;
00AE	28F2	jmp     L00F2
				;124			case HT66FB550_MCU_IO_PB:
				;125				switch(pin)
				;126				{
				;127					case HT66FB550_MCU_IO_PINALL:
				;128						port_B_data = data;
				;129						break;
				;130					default:
				;131						port_B_data = port_B_data & (!filter);
				L00AF:
00AF	0F01	mov     a, 1H
00B0	408F	mov     ra, a
00B1	5095	sz      filter[0]
00B2	28B4	jmp     L00B4
00B3	28B5	jmp     L00B5
				L00B4:
00B4	5F0F	clr     ra
				L00B5:
00B5	4708	mov     a, port_B_data[0]
00B6	468F	andm    a, ra
				;132						port_B_data = port_B_data | (filter & data);
00B7	4713	mov     a, data[0]
00B8	4690	andm    a, rb
00B9	470F	mov     a, ra
00BA	4590	orm     a, rb
00BB	4710	mov     a, rb
00BC	4088	mov     port_B_data[0], a
				;133						break;
				;134				}
				;135				_pb = port_B_data;
00BD	4710	mov     a, rb
00BE	00A2	mov     PB, a
				;136				break;
00BF	28F2	jmp     L00F2
				;137			case HT66FB550_MCU_IO_PC:
				;138				switch(pin)
				;139				{
				;140					case HT66FB550_MCU_IO_PINALL:
				;141						port_C_data = data;
				;142						break;
				;143					default:
				;144						port_C_data = port_C_data & (!filter);
				L00C0:
00C0	0F01	mov     a, 1H
00C1	408F	mov     ra, a
00C2	5095	sz      filter[0]
00C3	28C5	jmp     L00C5
00C4	28C6	jmp     L00C6
				L00C5:
00C5	5F0F	clr     ra
				L00C6:
00C6	4707	mov     a, port_C_data[0]
00C7	468F	andm    a, ra
				;145						port_C_data = port_C_data | (filter & data);
00C8	4713	mov     a, data[0]
00C9	4690	andm    a, rb
00CA	470F	mov     a, ra
00CB	4590	orm     a, rb
00CC	4710	mov     a, rb
00CD	4087	mov     port_C_data[0], a
				;146						break;
				;147				}
				;148				_pc = port_C_data;
00CE	4710	mov     a, rb
00CF	00A4	mov     PC, a
				;149				break;
00D0	28F2	jmp     L00F2
				;150			case HT66FB550_MCU_IO_PD:
				;151				switch(pin)
				;152				{
				;153					case HT66FB550_MCU_IO_PINALL:
				;154						port_D_data = data;
				;155						break;
				;156					default:
				;157						port_D_data = port_D_data & (!filter);
				L00D1:
00D1	0F01	mov     a, 1H
00D2	408F	mov     ra, a
00D3	5095	sz      filter[0]
00D4	28D6	jmp     L00D6
00D5	28D7	jmp     L00D7
				L00D6:
00D6	5F0F	clr     ra
				L00D7:
00D7	4706	mov     a, port_D_data[0]
00D8	468F	andm    a, ra
				;158						port_D_data = port_D_data | (filter & data);
00D9	4713	mov     a, data[0]
00DA	4690	andm    a, rb
00DB	470F	mov     a, ra
00DC	4590	orm     a, rb
00DD	4710	mov     a, rb
00DE	4086	mov     port_D_data[0], a
				;159						break;
				;160				}
				;161				_pd = port_D_data;
00DF	4710	mov     a, rb
00E0	00A6	mov     PD, a
				;162				break;
00E1	28F2	jmp     L00F2
				;163			case HT66FB550_MCU_IO_PE:
				;164				switch(pin)
				;165				{
				;166					case HT66FB550_MCU_IO_PINALL:
				;167						port_E_data = data;
				;168						break;
				;169					default:
				;170						port_E_data = port_E_data & (!filter);
				L00E2:
00E2	0F01	mov     a, 1H
00E3	408F	mov     ra, a
00E4	5095	sz      filter[0]
00E5	28E7	jmp     L00E7
00E6	28E8	jmp     L00E8
				L00E7:
00E7	5F0F	clr     ra
				L00E8:
00E8	4705	mov     a, port_E_data[0]
00E9	468F	andm    a, ra
				;171						port_E_data = port_E_data | (filter & data);
00EA	4713	mov     a, data[0]
00EB	4690	andm    a, rb
00EC	470F	mov     a, ra
00ED	4590	orm     a, rb
00EE	4710	mov     a, rb
00EF	4085	mov     port_E_data[0], a
				;172						break;
				;173				}
				;174				_pe = port_E_data;
00F0	4710	mov     a, rb
00F1	00A8	mov     PE, a
				L00F2:
00F2	0003	ret
				;175				break;
				;176		}		
				;177	}
				;178	
				;179	void HT66FB550_IO_Pull_High(char port, char pin, char data)
				;180	{
				;181		char filter=0x01;
				;182		filter = filter << pin;
				;183		switch(port)
				;184		{
				;185			case HT66FB550_MCU_IO_PA:
				;186				switch(pin==HT66FB550_MCU_IO_PINALL)
				;187				{
				;188					case HT66FB550_MCU_IO_PINALL:
				;189						port_A_pull_high = data;
				;190						break;
				;191					default:
				;192						port_A_pull_high = port_A_pull_high & (!filter);
				;193						port_A_pull_high = port_A_pull_high | (filter & data);
				;194						break;
				;195				}
				;196				_pa = port_A_pull_high;
				;197				break;
				;198			case HT66FB550_MCU_IO_PB:
				;199				switch(pin==HT66FB550_MCU_IO_PINALL)
				;200				{
				;201					case HT66FB550_MCU_IO_PINALL:
				;202						port_B_pull_high = data;
				;203						break;
				;204					default:
				;205						port_B_pull_high = port_B_pull_high & (!filter);
				;206						port_B_pull_high = port_B_pull_high | (filter & data);
				;207						break;
				;208				}
				;209				_pb = port_B_pull_high;
				;210				break;
				;211			case HT66FB550_MCU_IO_PC:
				;212				switch(pin==HT66FB550_MCU_IO_PINALL)
				;213				{
				;214					case HT66FB550_MCU_IO_PINALL:
				;215						port_C_pull_high = data;
				;216						break;
				;217					default:
				;218						port_C_pull_high = port_C_pull_high & (!filter);
				;219						port_C_pull_high = port_C_pull_high | (filter & data);
				;220						break;
				;221				}
				;222				_pc = port_C_pull_high;
				;223				break;
				;224			case HT66FB550_MCU_IO_PD:
				;225				switch(pin==HT66FB550_MCU_IO_PINALL)
				;226				{
				;227					case HT66FB550_MCU_IO_PINALL:
				;228						port_D_pull_high = data;
				;229						break;
				;230					default:
				;231						port_D_pull_high = port_D_pull_high & (!filter);
				;232						port_D_pull_high = port_D_pull_high | (filter & data);
				;233						break;
				;234				}
				;235				_pd = port_D_pull_high;
				;236				break;
				;237			case HT66FB550_MCU_IO_PE:
				;238				switch(pin==HT66FB550_MCU_IO_PINALL)
				;239				{
				;240					case HT66FB550_MCU_IO_PINALL:
				;241						port_E_pull_high = data;
				;242						break;
				;243					default:
				;244						port_E_pull_high = port_E_pull_high & (!filter);
				;245						port_E_pull_high = port_E_pull_high | (filter & data);
				;246						break;
				;247				}
				;248				_pe = port_E_pull_high;
				;249				break;
				;250		}			
				;251	}
				;252	
				;253	void HT66FB550_IO_High_Current(char port, char data)
				;254	{
				;255		switch(port)
				;256		{
				;257			case HT66FB550_MCU_IO_PA:
				;258				switch(data)
				;259				{
				;260					case HT66FB550_MCU_IO_DATA_SET:
				;261						_paoi = 0xff;
				;262						break;
				;263					case HT66FB550_MCU_IO_DATA_CLEAR:
				;264					default:
				;265						_paoi = 0x00;
				;266						break;
				;267				}
				;268				break;
				;269			case HT66FB550_MCU_IO_PB:
				;270				switch(data)
				;271				{
				;272					case HT66FB550_MCU_IO_DATA_SET:
				;273						_pbhi = 1;
				;274						_pbli = 1;
				;275						break;
				;276					case HT66FB550_MCU_IO_DATA_CLEAR:
				;277					default:
				;278						_pbhi = 0;
				;279						_pbli = 0;
				;280						break;
				;281				}
				;282			case HT66FB550_MCU_IO_PC:
				;283				switch(data)
				;284				{
				;285					case HT66FB550_MCU_IO_DATA_SET:
				;286						_pchi = 1;
				;287						_pcli = 1;
				;288						break;
				;289					case HT66FB550_MCU_IO_DATA_CLEAR:
				;290					default:
				;291						_pchi = 0;
				;292						_pcli = 0;
				;293						break;
				;294				}
				;295			case HT66FB550_MCU_IO_PD:
				;296				switch(data)
				;297				{
				;298					case HT66FB550_MCU_IO_DATA_SET:
				;299						_pdhi = 1;
				;300						_pdli = 1;
				;301						break;
				;302					case HT66FB550_MCU_IO_DATA_CLEAR:
				;303					default:
				;304						_pdhi = 0;
				;305						_pdli = 0;
				;306						break;
				;307				}
				;308			case HT66FB550_MCU_IO_PE:
				;309				switch(data)
				;310				{
				;311					case HT66FB550_MCU_IO_DATA_SET:
				;312						_pehi = 1;
				;313						_peli = 1;
				;314						break;
				;315					case HT66FB550_MCU_IO_DATA_CLEAR:
				;316					default:
				;317						_pehi = 0;
				;318						_peli = 0;
				;319						break;
				;320				}
				;321		}			
				;322	}
				;323	
				;324	void HT66FB550_IO_Slew_Rate(void)
				;325	{
				;326	    
				;327	}
				;328	void HT66FB550_IO_Port_A_Output_Power_Control(char pin, char power_source)
				;329	{
				;330		
				;331	}
				data .SECTION 'DATA'
				__pa DB DUP (?) ; __pa
				__pac DB DUP (?) ; __pac
				__paoi DB DUP (?) ; __paoi
				__pxoi DB DUP (?) ; __pxoi
				__pb DB DUP (?) ; __pb
				__pbc DB DUP (?) ; __pbc
				__pc DB DUP (?) ; __pc
				__pcc DB DUP (?) ; __pcc
				__pd DB DUP (?) ; __pd
				__pdc DB DUP (?) ; __pdc
				__pe DB DUP (?) ; __pe
				__pec DB DUP (?) ; __pec
				__acer0 DB DUP (?) ; __acer0
				__acer1 DB DUP (?) ; __acer1
				port_E_pull_high DB DUP (?) ; port_E_pull_high
				port_D_pull_high DB DUP (?) ; port_D_pull_high
				port_C_pull_high DB DUP (?) ; port_C_pull_high
				port_B_pull_high DB DUP (?) ; port_B_pull_high
				port_A_pull_high DB DUP (?) ; port_A_pull_high
				port_E_data DB DUP (?) ; port_E_data
				port_D_data DB DUP (?) ; port_D_data
				port_C_data DB DUP (?) ; port_C_data
				port_B_data DB DUP (?) ; port_B_data
				port_A_data DB DUP (?) ; port_A_data
				port_E_config DB DUP (?) ; port_E_config
				port_D_config DB DUP (?) ; port_D_config
				port_C_config DB DUP (?) ; port_C_config
				port_B_config DB DUP (?) ; port_B_config
				port_A_config DB DUP (?) ; port_A_config
				ra DB DUP (?)
				rb DB DUP (?)
				rc DB DUP (?)
				pin DB DUP (?) ; pin
				data DB DUP (?) ; data
				port DB DUP (?) ; port
				filter DB DUP (?) ; filter
